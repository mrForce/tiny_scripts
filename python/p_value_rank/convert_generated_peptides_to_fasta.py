from Bio.Seq import Seq
from Bio.SeqRecord import SeqRecord
from Bio.Alphabet import IUPAC
import argparse

parser = argparse.ArgumentParser(description='Takes file generated by crux generate-peptides utility, converts to FASTA')
parser.add_argument('peptides', help='Path to file generated by crux generate-peptides')
parser.add_argument('fasta', help='output file')
args = parser.parse_args()

with open(args.peptides, 'r') as f:
    records = []
    i = 1
    for x in f:
        x = x.strip()
        if x:
            parts = x.split()
            peptide = parts[0]
            record = SeqRecord(Seq(peptide, IUPAC.protein), id=str(i))
            records.append(record)
            i += 1
    with open(args.fasta, 'w') as g:
        SeqIO.write(records, g, 'fasta')
